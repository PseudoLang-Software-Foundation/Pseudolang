name: Build and Test Pseudolang

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Run Tests
        run: cargo test --verbose

  build-windows:
    name: Build Windows
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-gnu

      - name: Build Release
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Prepare Artifacts
        run: |
          mkdir -p release
          copy target\x86_64-pc-windows-gnu\release\fplc.exe release\fplc-x64.exe

      - name: Install NSIS
        run: choco install nsis -y
          
      - name: Prepare Installer Files
        run: |
          mkdir -p installer
          copy target\x86_64-pc-windows-gnu\release\fplc.exe installer\fplc.exe
          copy LICENSE installer\
          copy installer\Pseudolang-Logo.ico installer\
          
      - name: Build Installer
        run: makensis installer\pseudolang.nsi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pseudolang-windows
          path: |
            release/*
            release/installer/*
          retention-days: 7

  build-linux:
    name: Build Linux
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build Release
        run: cargo build --release

      - name: Prepare Artifacts
        run: |
          mkdir -p release
          cp target/release/fplc release/fplc-linux-x64
          chmod +x release/fplc-linux-x64

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pseudolang-linux
          path: release/*
          retention-days: 7

  publish:
    name: Publish Artifacts
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release Directory
        run: |
          mkdir -p final_release
          cp -r artifacts/*/* final_release/
          
      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pseudolang-all-platforms
          path: final_release/*
          retention-days: 30

  release:
    name: Create Release
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/pseudolang-windows/release/installer/pseudolang-setup-x64.exe
            artifacts/pseudolang-windows/release/fplc-x64.exe
            artifacts/pseudolang-linux/fplc-linux-x64
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
